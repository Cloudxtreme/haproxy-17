# Constructs the “X-Forwarded-For” client request header field,
# using the Proxy Protocol header if present, else the X-Forwarded-For header:
map $proxy_protocol_addr $forwarded_for {
  default $proxy_protocol_addr;
  ""      $http_x_forwarded_for;
}

# Determines the real IP based on the proxy headers:
map $forwarded_for $real_ip {
  default               $remote_addr;
  "~^(?<capture>[^,]+)" $capture;
}

log_format custom '$real_ip - $remote_user [$time_local] '
                  '"$request" $status $body_bytes_sent '
                  '"$http_referer" "$http_user_agent"';

server {
  access_log /var/log/nginx/access.log custom;
  listen 80;
  return 301 https://$host$request_uri;
}

server {
  access_log /var/log/nginx/access.log custom;
  listen 443 ssl spdy proxy_protocol;
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
  ssl_prefer_server_ciphers on;
  ssl_ciphers ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:ECDH+3DES:DH+3DES:RSA+AESGCM:RSA+AES:RSA+3DES:!aNULL:!MD5:!DSS;
  ssl_dhparam /etc/nginx/ssl/dhparam.pem;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 10m;
  ssl_certificate /etc/nginx/ssl/default.crt;
  ssl_certificate_key /etc/nginx/ssl/default.key;
}
